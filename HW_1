Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. Напротив каждого действия - напишите команду в GitBash


JSON
 4. Создать внешний репозиторий c названием JSON

 5. Клонировать репозиторий JSON на локальный компьютер. 
 git clone git@github.com:EVeselova/JSON.git

 6. Внутри локального JSON создать файл “new.json”. 
 touch new_1.json
 
 7. Добавить файл под гит. 
 git add new.json
 
 8. Закоммитить файл. 
 git commit -m "add new.json file"
 
 9. Отправить файл на внешний GitHub репозиторий. 
 git push
 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате JSON.

cat >> new.json
{
"name":"Ekaterina",
"age":35,
"animals":1,
"salary":1000
}

 11. Отправить изменения на внешний репозиторий.
 
git add new.json
git commit -m "update new.json file"
git push

 12. Создать файл preferences.json 
 touch preferences.json
 
 13. В файл preferences.json добавить информацию о своих предпочтениях 
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 
cat >> preferences.json
{
"fav_movie":"carry",
"fav_show":"boys",
"fav_food":"meet",
"fav_season":"summer",
"country_to_visit":"Peru"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skills.json
{
"skill_1":"theory",
"skill_2":"HTTP",
"skill_3":" JSON_structure",
"skill_4":"API",
"skill_5":"traffic_sniffing",
"skoll_6":"Devtools",
"many":" others"
}

 15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json
git push

 16. На веб интерфейсе создать файл bug_report.json.
Add file
Create new file

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
	  "id":123,
	  "title":"What_where_when",
	  "precondition":"do_it",
	  "steps":"one_two_three",
	  "environment":"windows_10",
	  "severity":"trivial",
	  "priority":"low",
	  "attach":"video"
	}
  
19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes

 20. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 21. Создать внешний репозиторий c названием XML.
 
 22. Клонировать репозиторий XML на локальный компьютер.
Git clone git@github.com:EVeselova/XML.git

 23. Внутри локального XML создать файл “new.xml”.
cd XML/
> new.xml

 24. Добавить файл под гит.
git add new.xml

 25. Закоммитить файл.
git commit -m "add file new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
 Всё написать в формате XML.
cat >> new.xml
<?xml version="1.0" encoding="UTF-8"?>
<about>
        <name>Ekaterina</name>
        <age>35</age>
        <animal>1</animal>
        <salary>1000</salary>
</about>

 28. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m "update file new.xml"
git push

 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
cat >> preferences.xml
<?xml version="1.0" encoding="UTF-8"?>
<preferences>
        <movie>Carry</movie>
        <show>Boys</show>
        <food>Meat</food>
        <season>Summer</season>
        <country>Peru</country>
</preferences>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat >> skills.xml
<?xml version="1.0" encoding="UTF-8"?>
<skills>
        <s_1>API</s_1>
        <s_2>Postman</s_2>
        <s_3>Devtools</s_3>
</skills>

 32. Сделать коммит в одну строку.
git commit -m "files Preferences and skills are added"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.
Add file
Create new file

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
done

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
git pull


TXT
 1. Создать внешний репозиторий c названием TXT.
 
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone git@github.com:EVeselova/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
> new.txt

 4. Добавить файл под гит.
git add .

 5. Закоммитить файл.
git commit -m "add file new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
cat >> new.txt
Name Ekaterina
Age 35
pets: 1
salary: 1000

 8. Отправить изменения на внешний репозиторий.
git add .
git commit -m "update file new.txt"
git push

 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл "preferences.txt" добавить информацию о своих предпочтениях 
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
cat >> preferences.txt
fav_movie: Carry
fav_show: Boys
fav_food: meat
fav_season: summer
country_to_visit: Peru

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
> sklls.txt
skill_1 theory,
skill_2 HTTP,
skill_3 JSON_structure,
skill_4 API,
skill_5 traffic_sniffing,
skill_6 "Devtools,
many others

 12. Сделать коммит в одну строку.
git add .
git commit -m "add files preferences.txt, sklls.txt"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
Add file
Create new file

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
done

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT
git pull
